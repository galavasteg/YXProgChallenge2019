"""
Шёл 2058 год. Колонии первых поселенцев уже высадились
на Марсе и стали его обживать, а Яндекс.Такси начала
развертывание системы шатл-станций.

Для нормального функционирования шатл-станция нуждается
в постоянном питании от энергетической сети. Чтобы
запитать станцию нужно либо построить урановый ядерный
генератор энергии внутри самой станции, либо проложить
кабель до другой (уже запитанной) шатл-станции.
Стоимость строительства генератора внутри разных
шатл-станций может отличаться. Проведение кабеля
между шатл-станциями также варьируется по стоимости и
не всегда возможно. Кабельное соединение является
двунаправленным.

Задача состоит в том, чтобы организовать эффективное
(с минимальной стоимостью) питание всех шатл-станций.

На вход программа получает общее число шатл-станций,
стоимости строительства генераторов для каждой
шатл-станции и описания всех возможных кабелей между
шатл-станциями (номера соединяемых станций и стоимость
прокладки кабеля).

Примечания
Станции нумеруются с единицы.
Числа внутри строки разделяются одним пробелом.
Корректность входных данных проверять не требуется.
"""

import sys
from pathlib import Path


scriptDir = Path.cwd()
outputDir = scriptDir.joinpath('output')


def load_input(fn='input.txt') -> tuple:
    with open(fn) as f:
        stations = int(f.readline())
        station_gen_costs = dict(
            (st_num, cost) for st_num, cost
            in enumerate(map(int, f.readline().split()))
        )

        cables = int(f.readline())
        cables_costs = {}
        for _ in range(cables):
            st_from, st_to, cost = tuple(map(int, f.readline().split()))
            cables_costs[st_from] = {'to': st_to, 'cost': cost}

    return station_gen_costs, cables_costs


def main():
    station_gen_costs, cables_costs = load_input()
    min_estimate = 0

    print(min_estimate)


if __name__ == '__main__':
    main()

